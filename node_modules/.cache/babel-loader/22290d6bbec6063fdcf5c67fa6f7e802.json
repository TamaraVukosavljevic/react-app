{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\create-react-app-main\\\\my-app\\\\src\\\\CustomrButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport PropType from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomButton = ({\n  variant,\n  size,\n  children,\n  authButton,\n  type,\n  onClick,\n  textTransform,\n  className,\n  disabled,\n  hidden,\n  minWidth,\n  ...restProps\n}) => {\n  _s();\n\n  const buttonRef = useRef(null);\n\n  function styles() {\n    let style = 'c-btn';\n\n    if (variant) {\n      style += ` c-btn--${variant}`;\n    }\n\n    if (size) {\n      style += ` c-btn--${size}`;\n    }\n\n    if (textTransform) {\n      style += ` c-btn--${textTransform}`;\n    }\n\n    if (authButton) {\n      style += ` c-btn--auth`;\n    }\n\n    if (minWidth) {\n      style += ` c-btn--${minWidth}`;\n    }\n\n    if (hidden) {\n      style += ` c-btn--hidden`;\n    }\n\n    if (className) {\n      style += ` ${className}`;\n    }\n\n    return style;\n  }\n\n  function handleClick() {\n    buttonRef.current.blur();\n\n    if (typeof onClick === 'function') {\n      onClick();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: buttonRef,\n    className: styles(),\n    onClick: handleClick,\n    type: type,\n    disabled: disabled,\n    ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomButton, \"PvhYvZjqGdFMi5KDqD8tkkFprO8=\");\n\n_c = CustomButton;\nCustomButton.propTypes = {\n  children: PropType.node,\n  textTransform: PropType.oneOf(['uppercase', 'capitalize']),\n  size: PropType.oneOf(['sm', 'md', 'lg', 'xl']),\n  authButton: PropType.bool,\n  variant: PropType.string,\n  type: PropType.oneOf(['button', 'submit', 'reset']),\n  onClick: PropType.func,\n  className: PropType.string,\n  disabled: PropType.bool,\n  minWidth: PropType.oneOf(['auto']),\n  hidden: PropType.bool\n};\nCustomButton.defaultProps = {\n  type: 'button'\n};\nexport default CustomButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/create-react-app-main/my-app/src/CustomrButton.js"],"names":["React","useRef","PropType","CustomButton","variant","size","children","authButton","type","onClick","textTransform","className","disabled","hidden","minWidth","restProps","buttonRef","styles","style","handleClick","current","blur","propTypes","node","oneOf","bool","string","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport PropType from 'prop-types';\r\n\r\nconst CustomButton = ({\r\n  variant,\r\n  size,\r\n  children,\r\n  authButton,\r\n  type,\r\n  onClick,\r\n  textTransform,\r\n  className,\r\n  disabled,\r\n  hidden,\r\n  minWidth,\r\n  ...restProps\r\n}) => {\r\n  const buttonRef = useRef(null);\r\n\r\n  function styles() {\r\n    let style = 'c-btn';\r\n\r\n    if (variant) {\r\n      style += ` c-btn--${variant}`;\r\n    }\r\n\r\n    if (size) {\r\n      style += ` c-btn--${size}`;\r\n    }\r\n\r\n    if (textTransform) {\r\n      style += ` c-btn--${textTransform}`;\r\n    }\r\n\r\n    if (authButton) {\r\n      style += ` c-btn--auth`;\r\n    }\r\n\r\n    if (minWidth) {\r\n      style += ` c-btn--${minWidth}`;\r\n    }\r\n\r\n    if (hidden) {\r\n      style += ` c-btn--hidden`;\r\n    }\r\n\r\n    if (className) {\r\n      style += ` ${className}`;\r\n    }\r\n\r\n    return style;\r\n  }\r\n\r\n  function handleClick() {\r\n    buttonRef.current.blur();\r\n    if (typeof onClick === 'function') {\r\n      onClick();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button\r\n      ref={buttonRef}\r\n      className={styles()}\r\n      onClick={handleClick}\r\n      type={type}\r\n      disabled={disabled}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  children: PropType.node,\r\n  textTransform: PropType.oneOf(['uppercase', 'capitalize']),\r\n  size: PropType.oneOf(['sm', 'md', 'lg', 'xl']),\r\n  authButton: PropType.bool,\r\n  variant: PropType.string,\r\n  type: PropType.oneOf(['button', 'submit', 'reset']),\r\n  onClick: PropType.func,\r\n  className: PropType.string,\r\n  disabled: PropType.bool,\r\n  minWidth: PropType.oneOf(['auto']),\r\n  hidden: PropType.bool,\r\n};\r\n\r\nCustomButton.defaultProps = {\r\n  type: 'button',\r\n};\r\n\r\nexport default CustomButton;"]},"metadata":{},"sourceType":"module"}